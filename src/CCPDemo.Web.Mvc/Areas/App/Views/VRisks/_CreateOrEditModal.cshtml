
@using System.Globalization
@using CCPDemo.Web.Areas.App.Models.Common.Modals
@using CCPDemo.Web.Areas.App.Models.VRisks
@model CreateOrEditVRiskModalViewModel
@using Abp.Extensions
@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? "Edit Risk" : "Create New Risk"))

@{
    var readWrite = IsGranted(CCPDemo.Authorization.AppPermissions.Pages_VRisks_Create) ? "" : "readonly";
    var riskMitigatorOnlyWrite = IsGranted(CCPDemo.Authorization.AppPermissions.Pages_VRisks_Create) ? "readonly" : "";
    var tv = !IsGranted(CCPDemo.Authorization.AppPermissions.Pages_VRisks_Create);
}

<div class="modal-body">
    <div id="VRiskInformationsTab">
        <form name="VRiskInformationsForm" role="form" novalidate class="form-validation">

            @if (Model.IsEditMode)
            {
            <input type="hidden" name="id" value="@Model.VRisk.Id" />
            }

            <div class="my-3">
                <label class="form-label" for="VRisk_Name">@L("Name")</label>
                <input class="form-control form-control-solid" id="VRisk_Name" value="@Model.VRisk.Name" type="text" name="name" @readWrite />
            </div>

            <div class="my-3">
                <label class="form-label" for="VRisk_Description">@L("Description")</label>
                @*<input class="form-control" id="VRisk_Description" value="@Model.VRisk.Description" type="text" name="description" />*@
                <textarea id="VRisk_Description" rows="5" name="description" class="form-control form-control-solid" maxlength="256" @readWrite>@Model.VRisk.Description</textarea>
            </div>

            <div class="my-3">
                <label class="form-label" for="VRisk_Department">@L("Department")</label>
                @*<input class="form-control form-control-solid" id="VRisk_Department" value="@Model.VRisk.Department" type="text" name="department" />*@
                <select id="VRisk_Department" name="department" class="form-control" @readWrite>

                    @if (Model.IsEditMode)
                    {
                        <option value="@Model.VRisk.Department" selected>
                            @Model.VRisk.Department
                        </option>
                    }
                    esle{
                    <option value="0" selected>
                        Select Department
                    </option>
                    }
                    <option value="Data & Digital Services">Data & Digital Services</option>
                    <option value="Application Support">Application Support</option>
                    <option value="Sales">Sales</option>
                    <option value="Operations">Operations</option>
                </select>
            </div>

            <div class="my-3">
                <label class="form-label" for="VRisk_RiskOwner">Risk Owner</label>
                @*<input class="form-control form-control-solid" id="VRisk_RiskOwner" value="@Model.VRisk.RiskOwner" type="text" name="riskOwner" />*@
                <select id="VRisk_RiskOwner" name="riskOwner" class="form-control" @readWrite>
                    @if (Model.IsEditMode)
                    {
                        <option value="@Model.User.FullName" selected>
                            @Model.User.FullName
                        </option>
                    }esle{
                    <option value="0" selected>
                        Select Owner
                    </option>
                    }
                    
                    @foreach (var user in Model.Users)
                    {
                        <option value="">@user.FullName</option>
                    }
                </select>
            </div>

            <div class="my-3">
                <label class="form-label" for="VRisk_ResolutionTimeLine">Suggested Resolution Timeline</label>
                <input class="form-control form-control-solid" id="VRisk_ResolutionTimeLine" value="@Model.VRisk.ResolutionTimeLine" type="text" name="resolutionTimeLine" @readWrite />
            </div>

            <div class="my-3">
                <label class="form-label" for="VRisk_ERMComment">ERM Comment</label>
                @*<input class="form-control" id="VRisk_ERMComment" value="@Model.VRisk.ERMComment" type="text" name="ermComment" />*@
                <textarea id="VRisk_ERMComment" rows="5" name="ermComment" class="form-control form-control-solid" maxlength="256" @readWrite>@Model.VRisk.ERMComment</textarea>
            </div>

            <div class="my-3">
                <label class="form-label" for="VRisk_RiskOwnerComment">Risk Owner's Comment</label>
                @*<input class="form-control" id="VRisk_RiskOwnerComment" value="@Model.VRisk.RiskOwnerComment" type="text" name="riskOwnerComment" />*@
                <textarea id="VRisk_RiskOwnerComment" rows="5" name="riskOwnerComment" class="form-control form-control-solid" maxlength="256" @riskMitigatorOnlyWrite>@Model.VRisk.RiskOwnerComment</textarea>
            </div>

            <div class="my-3">
                <label class="form-label" for="VRisk_Status">@L("Status")</label>
                @*<input class="form-control form-control-solid" id="VRisk_Status" value="@Model.VRisk.Status" type="text" name="status" />*@
                <select id="VRisk_Status" name="status" class="form-control" @readWrite>
                   
                    @{
                        var selectStatus = Model.VRisk.Status;
                        var statusValue = "0";
                        var Selected = "";
                        var defaultSelected = "selected";

                        if (!selectStatus.IsNullOrEmpty())
                        {
                            statusValue = selectStatus;
                            Selected = "selected";
                            defaultSelected = "";
                        }
                        else
                        {
                            selectStatus = "Select Status";
                        }

                    }
                    @if (Model.IsEditMode)
                    {
                        <option value="@statusValue" selected>
                            @selectStatus
                        </option>
                    }else
                    {
                        <option value="New/Open" selected>New/Open</option>
                    }

                    <option value="Mitigation Planned">Mitigation Planned</option>
                    <option value="Management Review">Management Reviewed</option>
                    <option value="Closed">Closed</option>
                    <option value="Reopened">Reopned</option>
                    <option value="Untreated">Untreated</option>
                    <option value="Treated">Treated</option>
                </select>
            </div>

            <div class="my-3">
                <label class="form-label" for="VRisk_Rating">@L("Rating")</label>
                @*<input class="form-control form-control-solid" id="VRisk_Department" value="@Model.VRisk.Department" type="text" name="department" />*@
                <select id="VRisk_Rating" name="rating" class="form-control" @readWrite>
                    @if (Model.IsEditMode)
                    {
                        <option value="@Model.VRisk.Rating" selected>
                            @Model.VRisk.Rating
                        </option>
                    }
                    else
                    {
                        <option value="0" selected>Select Rating</option>
                    }
                    <option value="Critical">Critical</option>
                    <option value="Very High">Very High</option>
                    <option value="High">High</option>
                    <option value="Medium">Medium</option>
                    <option value="Low">Low</option>
                </select>
            </div>

            @if (Model.IsEditMode)
            {
                <div class="my-3">
                    <label class="form-label" for="VRisk_ActualClosureDate">Actual Closure Date</label>
                    <input class="form-control form-control-solid" id="VRisk_ActualClosureDate" value="@Model.VRisk.ActualClosureDate" type="text" name="actualClosureDate" @readWrite />
                </div>
            }


            @if (tv)
            {
                <div class="my-3">
                    <label class="form-label" for="VRisk_MitigationDate">Mitigation Date</label>
                    <input class="form-control form-control-solid" id="VRisk_MitigationDate" value="@Model.VRisk.MitigationDate" type="text" name="mitigationDate" />
                </div>
                <label class="form-check form-check-custom">
                    @*<input id="VRisk_AcceptRisk" name="acceptRisk" type="checkbox" class="form-check-input" @Html.Raw(Model.VRisk.AcceptRisk ?"checked=\"checked\"":"") />*@
                    <input id="VRisk_AcceptRisk" name="acceptRisk" type="checkbox" class="form-check-input" asp-for="@Model.VRisk.AcceptRisk" />
                    <span class="form-check-label">
                        Accept Risk
                    </span>
                </label>
            }

        </form>
    </div>
</div>

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")