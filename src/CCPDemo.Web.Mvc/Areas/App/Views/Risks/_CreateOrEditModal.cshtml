@using System.Globalization
@using CCPDemo.Web.Areas.App.Models.Common.Modals
@using CCPDemo.Web.Areas.App.Models.Risks
@model CreateOrEditRiskModalViewModel
@using Abp.Extensions

@await Html.PartialAsync("~/Areas/App/Views/Risks/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? "Edit Risk" : "Raise New Risk"))

@{
    var chectIt = "";
    var accepted = false;
    if (Model.Risk.RiskAccepted)
    {
        chectIt = "checked";
        accepted = true;
    }

    var setReadonly = Model.isERM ? "readonly" : "";
    var userReadonly = !Model.isERM ? "readonly" : "";
    var isRiskAccepted = Model.Risk.RiskAccepted;
    var ckeckBoxStateReadOnly = isRiskAccepted ? "readonly" : "";
    var ckeckBoxStateDisabled = isRiskAccepted ? "disabled" : "";
}

@section styles {
    <style>
        input:focus, textarea:focus, select:focus{
        outline: none;
        }

    </style>
}
<div class="modal-body">
    <div id="RiskInformationsTab">
        <form name="RiskInformationsForm" role="form" novalidate class="form-validation">

            @if (Model.IsEditMode)
            {
                <input type="hidden" name="id" id="riskId" value="@Model.Risk.Id" />
            }

            @*
            <h1>@Model.isAdmin</h1>
            <h1>ERM?: @Model.isERM</h1>
            @foreach (var role in Model.UserRoles)
            {
            <h1>@role</h1>
            }
            @foreach (var roleName in Model.RoleList )
            {
            <h1>@roleName.Key (@roleName.Value)</h1>
            }
            *@

            @{
                string strDate = String.Empty;
                if(Model.Risk.TargetDate != null)
                {
                    var d = @Model.Risk.TargetDate.ToString().Split(" ")[0];
                    DateTime date = new DateTime(Convert.ToInt32(d.Split("/")[2]), Convert.ToInt32(d.Split("/")[0]), Convert.ToInt32(d.Split("/")[1]));
                    strDate = date.ToString("MM/dd/yyyy");
                }
            }
            
            <div class="my-3">
                    <label class="form-label" for="riskTypeId">Risk Type</label>
                
                @if (isRiskAccepted && Model.isERM)
                {
                    @Html.DropDownList("riskTypeId", new SelectList(Model.RiskRiskTypeList,"Id","DisplayName", (Model.IsEditMode ? Model.Risk.RiskTypeId.ToString() : "")),"Select Risk Type", new { @class = "form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6" , @required="required", @disabled = "disabled"  })

                }
                else
                {

                    @Html.DropDownList("riskTypeId", new SelectList(Model.RiskRiskTypeList,"Id","DisplayName", (Model.IsEditMode ? Model.Risk.RiskTypeId.ToString() : "")),"Select Risk Type", new { @class = "form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6" , @required="required"})
                }

                @if (!Model.isERM)
                {
                    <input type="hidden" name="riskTypeId" id="riskTypeId" value="@Model.Risk.RiskTypeId" />
                }
                </div>

                <div class="my-3">
                    <label class="form-label" for="organizationUnitId">Department/Unit</label>
                    
                @if (isRiskAccepted && Model.isERM)
                {
                    @Html.DropDownList("organizationUnitId", new SelectList(Model.RiskOrganizationUnitList,"Id","DisplayName", (Model.IsEditMode ? Model.Risk.OrganizationUnitId.ToString() : "")),"Select Unit or Department", new { @class = "form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6" , @required="required", @disabled = "disabled"})
                }

                else
                {
                    @Html.DropDownList("organizationUnitId", new SelectList(Model.RiskOrganizationUnitList,"Id","DisplayName", (Model.IsEditMode ? Model.Risk.OrganizationUnitId.ToString() : "")),"Select Unit or Department", new { @class = "form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6" , @required="required"})
                }

                @if (!Model.isERM)
                {
                    <input type="hidden" name="organizationUnitId" id="organizationUnitId" value="@Model.Risk.OrganizationUnitId" />
                }
            </div>

                <div class="my-3">
                    <label class="form-label" for="statusId">@L("Status")</label>
                    
                @if (isRiskAccepted && Model.isERM)
                {
                    @Html.DropDownList("statusId", new SelectList(Model.RiskStatusList,"Id","DisplayName", (Model.IsEditMode ? Model.Risk.StatusId.ToString() : "")),"Select Status", new { @class = "form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6" , @required="required", @disabled = "disabled"})
                }
                else
                {
                    @Html.DropDownList("statusId", new SelectList(Model.RiskStatusList,"Id","DisplayName", (Model.IsEditMode ? Model.Risk.StatusId.ToString() : "")),"Select Status", new { @class = "form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6" , @required="required"})
                }
                @if (!Model.isERM)
                {
                    <input type="hidden" name="statusId" id="statusId" value="@Model.Risk.StatusId" />
                }
                </div>

                <div class="my-3">
                    <label class="form-label" for="riskRatingId">Risk Rating</label>
                    
                @if (isRiskAccepted && Model.isERM)
                {
                    @Html.DropDownList("riskRatingId", new SelectList(Model.RiskRiskRatingList,"Id","DisplayName", (Model.IsEditMode ? Model.Risk.RiskRatingId.ToString() : "")),"Select Risk Rating", new { @class = "form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6" , @required="required", @disabled = "disabled"})
                }
                else
                {
                    @Html.DropDownList("riskRatingId", new SelectList(Model.RiskRiskRatingList,"Id","DisplayName", (Model.IsEditMode ? Model.Risk.RiskRatingId.ToString() : "")),"Select Risk Rating", new { @class = "form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6" , @required="required"})
                }
                @if (!Model.isERM)
                {
                    <input type="hidden" name="riskRatingId" id="riskRatingId" value="@Model.Risk.RiskRatingId" />
                }
                </div>

                <div class="my-3">
                    <label class="form-label" for="userId">Risk Owner</label>
                
                @if(isRiskAccepted && Model.isERM)
                {
                    @Html.DropDownList("userId", new SelectList(Model.RiskUserList,"Id","DisplayName", (Model.IsEditMode ? Model.Risk.UserId.ToString() : "")),"Select Risk Owner", new { @class = "form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6", @required="required",@disabled = "disabled"})
                }
                else
                {
                    @Html.DropDownList("userId", new SelectList(Model.RiskUserList,"Id","DisplayName", (Model.IsEditMode ? Model.Risk.UserId.ToString() : "")),"Select Risk Owner", new { @class = "form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6", @required="required"})
                }
                @if (!Model.isERM)
                {
                    <input type="hidden" name="userId" id="userId" value="@Model.Risk.UserId" />
                }
                    @*<select id="userId" name="userId" class="form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6" required>
                        <option value="" selected>
                            Select Risk Owner
                        </option>
                        }

                    </select>*@
                </div>

                <div class="my-3">
                    <label class="form-label" for="Risk_Summary">@L("Summary")</label>
                    @*<input class="form-control" id="Risk_Summary" value="@Model.Risk.Summary" type="text" name="summary" required />*@
                @if(isRiskAccepted && Model.isERM)
                {
                    <textarea class="form-control form-control-solid" id="Risk_Summary" name="summary" rows="5" placeholder="Risk Sumarry"  readonly>@Model.Risk.Summary</textarea>
                }
                else{

                    <textarea class="form-control form-control-solid" id="Risk_Summary" name="summary" rows="5" placeholder="Risk Sumarry" @userReadonly required>@Model.Risk.Summary</textarea>
                    }
                </div>

                <div class="my-3">
                    <label class="form-label" for="Risk_ExistingControl">Existing Control</label>
                    @*<input class="form-control" id="Risk_ExistingControl" value="@Model.Risk.ExistingControl" type="text" name="existingControl" />*@
                @if (isRiskAccepted && Model.isERM)
                {
                    <textarea class="form-control form-control-solid" id="Risk_ExistingControl" name="existingControl" rows="5" placeholder="Existing Control" readonly>@Model.Risk.ExistingControl</textarea>
                }
                else
                {
                    <textarea class="form-control form-control-solid" id="Risk_ExistingControl" name="existingControl" rows="5" placeholder="Existing Control" @userReadonly>@Model.Risk.ExistingControl</textarea>
                }
            </div>

                <div class="my-3">
                    <label class="form-label" for="Risk_ERMRecommendation">ERM Recommendation</label>
                    @*<input class="form-control" id="Risk_ERMRecommendation" value="@Model.Risk.ERMRecommendation" type="text" name="ermRecommendation" />*@
                @if(isRiskAccepted && Model.isERM)
                {
                    <textarea class="form-control form-control-solid" id="Risk_ERMRecommendation" name="ermRecommendation" rows="5" placeholder="ERM Recommendation" readonly>@Model.Risk.ERMRecommendation</textarea>
                }
                else
                {
                    <textarea class="form-control form-control-solid" id="Risk_ERMRecommendation" name="ermRecommendation" rows="5" placeholder="ERM Recommendation" @userReadonly>@Model.Risk.ERMRecommendation</textarea>
                }
            </div>

            @if (!Model.isERM)
            {
                
                @if (isRiskAccepted)
                {
                    <label class="form-label" for="Risk_TargetDate">Target Date</label>
                    <input class="form-control m-input" id="Risk_TargetDate" type="text" name="targetDate" value="@strDate" @setReadonly @ckeckBoxStateReadOnly />
                }else{
                    <div class="my-3">
                        <label class="form-label" for="Risk_TargetDate">Target Date</label>
                        <input class="form-control m-input" id="Risk_TargetDate" type="date" name="targetDate" value="@strDate" @setReadonly @ckeckBoxStateReadOnly />
                    </div>
                }
                <div class="my-3">
                    <label class="form-label" for="Risk_ActionPlan">Action Plan</label>
                    @*<input class="form-control" id="Risk_ActionPlan" value="@Model.Risk.ActionPlan" type="text" name="actionPlan" />*@
                    <textarea class="form-control form-control-solid" id="Risk_ActionPlan" name="actionPlan" rows="5" placeholder="Action Plan (Risk Owner)" @setReadonly @ckeckBoxStateReadOnly>@Model.Risk.ActionPlan</textarea>
                </div>

                <div class="my-3">
                    <label class="form-label" for="Risk_RiskOwnerComment">Risk Owner's Comment</label>
                    @*<input class="form-control" id="Risk_RiskOwnerComment" value="@Model.Risk.RiskOwnerComment" type="text" name="riskOwnerComment" />*@
                    <textarea class="form-control form-control-solid" id="Risk_RiskOwnerComment" name="riskOwnerComment" rows="5" placeholder="Risk Owner's Comment" @setReadonly @ckeckBoxStateReadOnly>@Model.Risk.RiskOwnerComment</textarea>
                </div>

            }
            else
            {
                <input id="Risk_TargetDate" type="hidden" name="targetDate" value="@strDate" />
                <input id="Risk_ActionPlan" type="hidden" name="actionPlan" value="@Model.Risk.ActionPlan" />
                <input id="Risk_RiskOwnerComment" type="hidden" name="riskOwnerComment" value="@Model.Risk.RiskOwnerComment" />

                if (Model.IsEditMode && Model.isERM && Model.Risk.AcceptanceDate != null)
                {
                    <div class="my-3">
                        <label class="form-label" for="Risk_ActualClosureDate">Actual Date</label>
                        <input class="form-control m-input" id="Risk_ActualClosureDate" type="date" name="actualClosureDate" value="@(Model.IsEditMode ? Model?.Risk.ActualClosureDate : null)"/>
                    </div>
                }
            }
                

                @*<div class="my-3">
            <label class="form-label" for="Risk_AcceptanceDate">Acceptance Date</label>
            <input class="form-control m-input date-picker" id="Risk_AcceptanceDate" type="text" name="acceptanceDate" value="@Model.Risk.AcceptanceDate" disabled />

            </div>*@
            <input type="hidden" name="acceptanceDate" value="@(Model.IsEditMode ? Model?.Risk.AcceptanceDate : null)" id="Risk_AcceptanceDate" />

            
            @if (Model.IsEditMode && !Model.isERM)
            {
                <label class="form-check form-check-custom">
                    @*<input class="form-check-input" id="riskAccepted" type="checkbox" @chectIt/>
                <input name="riskAccepted" type="hidden" value="@Model.Risk.RiskAccepted" />*@
                    <input type=checkbox name="riskAccepted" checked="@Model?.Risk.RiskAccepted" value="true" class="form-check-input" id="riskAccepted" @ckeckBoxStateDisabled />
                    <span class="form-check-label">
                        Risk Accepted
                    </span>
                </label>
            }

        </form>

    </div>
</div>


@await Html.PartialAsync("~/Areas/App/Views/Risks/Modals/_ModalFooterWithSaveAndCancel.cshtml", new RiskModalViewModel{
    isSaveButtonEnabled = isRiskAccepted ? false : true,
    isERM = Model.isERM
})